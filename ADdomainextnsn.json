{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Username": {
            "type": "string",
            "defaultValue": "sysgain",
            "metadata": {
                "description": "The name of the administrator account of the new VM and domain"
            }
        },
        "Password": {
            "type": "securestring",
            "defaultValue": "Sysgain@123456",
            "metadata": {
                "description": "The password for the administrator account of the new VM and domain"
            }
        },
        "winadminUsername": {
            "type": "string",
            "defaultValue": "WINUSER",
            "metadata": {
                "description": "The name of the administrator account of the new win VM and domain"
            }
        },
        "winadminPassword": {
            "type": "securestring",
            "defaultValue": "Sysgain@123456",
            "metadata": {
                "description": "The password for the administrator account of the new win VM and domain"
            }
        }
    },
    "variables": {
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "adsubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('adSubnetName1'))]",
        "winsubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('winSubnetName2'))]",
        "virtualNetworkName": "adVnet",
        "virtualNetworkAddressRange": "10.0.0.0/16",
        "adLBFE": "LBFE",
        "adLBBE": "LBBE",
        "adRDPNAT": "adRDP",
        "adNicName": "adNic",
        "winNicName": "winNic",
        "adNicIPAddress": "10.0.0.4",
        "adVMName": "adVM",
        "adSubnetName1": "adSubnet1",
        "adSubnetAddressPrefix1": "10.0.0.0/24",
        "winSubnetName2": "winSubnet",
        "winSubnetAddressPrefix2": "10.0.1.0/24",
        "adSubnetName3": "Subnet3",
        "adSubnetAddressPrefix3": "10.0.2.0/24",
        "adSubnetName4": "Subnet4",
        "adSubnetAddressPrefix4": "10.0.3.0/24",
        "publicIPAddressName": "adPublicIP",
        "winPipName": "winPip",
        "adAvailabilitySetName": "adAvailabiltySet",
        "adLBName": "adLoadBalancer",
        "virtualMachineName": "winVM",
        "pipAddressType": "Dynamic",
        "scriptFileName": "psscript.ps1",
        "prefix": "[uniqueString(resourceGroup().id)]",
        "dnsPrefix": "[concat('dns',substring(variables('prefix') ,0 ,5))]",
        "baseUrl": "https://raw.githubusercontent.com/sysgain/iot-automation/master",
        "domainName": "iottests.com",
        "_artifactsLocationSasToken": "",
        "winNsgName": "windows-nsg",
        "vmExtensionName": "extension",
        "managedDiskName": "datadisk",
        "count": 2,
        "storageAccountType": "Premium_LRS",
        "diskCreateOption": "empty",
        "diskSizeGB": "1023",
        "computeApiVersion": "2016-04-30-preview",
        "networkApiVersion": "2016-03-30",
        "deploymentApiVersion":"2016-02-01"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsPrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "sku": {
                "name": "Aligned"
            },
            "name": "[variables('adAvailabilitySetName')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformUpdateDomainCount": 3,
                "platformFaultDomainCount": 3
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "VNet",
            "apiVersion":"[variables('deploymentApiVersion')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), '/nested/vnet.json?token=AT3pTWxUQOrD7ajUZuoyJMbWnwCplSTLks5Zde-JwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('virtualNetworkAddressRange')]"
                    },
                    "subnetName1": {
                        "value": "[variables('adSubnetName1')]"
                    },
                    "subnetRange1": {
                        "value": "[variables('adSubnetAddressPrefix1')]"
                    },
                    "subnetName2": {
                        "value": "[variables('winSubnetName2')]"
                    },
                    "subnetRange2": {
                        "value": "[variables('winSubnetAddressPrefix2')]"
                    },
                    "subnetName3": {
                        "value": "[variables('adSubnetName3')]"
                    },
                    "subnetRange3": {
                        "value": "[variables('adSubnetAddressPrefix3')]"
                    },
                    "subnetName4": {
                        "value": "[variables('adSubnetName4')]"
                    },
                    "subnetRange4": {
                        "value": "[variables('adSubnetAddressPrefix4')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('adLBName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('adLBFE')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('adLBBE')]"
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[variables('adRDPNAT')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('adLBName'), variables('adLBFE'))]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 3389,
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('adNicName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "VNet",
                "[resourceId('Microsoft.Network/loadBalancers', variables('adLBName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('adNicIPAddress')]",
                            "subnet": {
                                "id": "[variables('adsubnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('adLBName'), variables('adLBBE'))]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('adLBName'), variables('adRDPNAT'))]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('adVMName')]",
            "apiVersion":"[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('adNicName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('adLBName'))]",
                "[resourceId('Microsoft.Compute/disks', concat(variables('managedDiskName'),'0'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DS2_v2"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
                },
                "osProfile": {
                    "computerName": "[variables('adVMName')]",
                    "adminUsername": "[parameters('Username')]",
                    "adminPassword": "[parameters('Password')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(variables('managedDiskName'),'0')]",
                            "createOption": "Attach",
                            "lun": 0,
                            "caching": "None",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks',concat(variables('managedDiskName'),'0'))]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('adNicName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "CreateADForest",
                    "apiVersion":"[variables('computeApiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('adVMName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[concat(variables('baseUrl'), '/scripts/CreateADPDC.zip', variables('_artifactsLocationSasToken'))]",
                            "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
                            "Properties": {
                                "DomainName": "[variables('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('Username')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('Password')]"
                            }
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "UpdateVNetDNS",
            "apiVersion":"[variables('deploymentApiVersion')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('adVMName'), 'CreateADForest')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), '/nested/vnetdns.json?token=AT3pTfA2d-wvUaqVp0DGyQKJTbyI0AQOks5ZdfJGwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[variables('adSubnetName1')]"
                    },
                    "subnetRange": {
                        "value": "[variables('adSubnetAddressPrefix1')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[variables('adNicIPAddress')]"
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/disks",
            "name": "[concat(variables('managedDiskName'),copyIndex())]",
            "apiVersion":"[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "dataDiskCopy",
                "count": "[variables('count')]"
            },
            "properties": {
                "accountType": "[variables('storageAccountType')]",
                "creationData": {
                    "createOption": "[variables('diskCreateOption')]"
                },
                "diskSizeGB": "[variables('diskSizeGB')]"
            }
        },
        {
            "name": "[variables('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion":"[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('winNicName'))]",
                "[concat('Microsoft.Compute/virtualMachines/', variables('adVMName'),'/extensions/CreateADForest')]",
                "[resourceId('Microsoft.Compute/disks', concat(variables('managedDiskName'),'1'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[variables('virtualMachineName')]",
                    "adminUsername": "[parameters('winadminUsername')]",
                    "adminPassword": "[parameters('winadminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": true,
                        "enableAutomaticUpdates": true
                    }
                },
                "hardwareProfile": {
                    "vmSize": "Standard_DS1_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2012-R2-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(variables('managedDiskName'),'1')]",
                            "createOption": "Attach",
                            "lun": 0,
                            "caching": "None",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks',concat(variables('managedDiskName'),'1'))]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('winNicName'))]"
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(variables('virtualMachineName'),'/CustomScriptExtension')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[resourceGroup().location]",
            "apiVersion":"[variables('computeApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.8",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat(variables('baseUrl'),'/scripts/psscript.ps1?token=AT3pTRSgLELr_drjvygt9_Fip9MfsSo3ks5ZdaFhwA%3D%3D')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat ('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFileName'),' ',variables('domainName'),' ',parameters('Username'),' ',parameters('Password'))]"
                }
            }
        },
        {
            "name": "[variables('winNicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('adNicName'))]",
                "VNet",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('winPipName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('winNsgName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('winsubnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('winPipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('winNsgName'))]"
                }
            }
        },
        {
            "name": "[variables('winPipName')]",
            "type": "Microsoft.Network/publicIpAddresses",
           "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "publicIpAllocationMethod": "[variables('pipAddressType')]",
                "idleTimeoutInMinutes": 4
            }
        },
        {
            "name": "[variables('winNsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "3389",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        }
    ]
}
